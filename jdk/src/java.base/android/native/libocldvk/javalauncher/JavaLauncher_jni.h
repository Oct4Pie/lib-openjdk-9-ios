/*
 * Copyright (c) 2014, 2015, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>

// Modified here not generated
#include "javalauncher_api.h"

// End Modified
/* Header for class com_oracle_dalvik_javalauncher_JavaLauncher */

#ifndef _Included_com_oracle_dalvik_javalauncher_JavaLauncher
#define _Included_com_oracle_dalvik_javalauncher_JavaLauncher
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     com_oracle_dalvik_javalauncher_JavaLauncher
 * Method:    _createJavaVM
 * Signature: ([Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_oracle_dalvik_javalauncher_JavaLauncher__1initialize
  (JNIEnv *, jobject, jobject);


/*
 * Class:     com_oracle_dalvik_javalauncher_JavaLauncher
 * Method:    _createJavaVM
 * Signature: ([Ljava/lang/String;Lcom/oracle/dalvik/javalauncher/JavaLauncherCallback;)I
 */
JNIEXPORT jint JNICALL Java_com_oracle_dalvik_javalauncher_JavaLauncher__1createJavaVM
  (JNIEnv *, jobject, jobjectArray, jobject);

/*
 * Class:     com_oracle_dalvik_javalauncher_JavaLauncher
 * Method:    _callJava
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Lcom/oracle/dalvik/javalauncher/JavaLauncherCallback;)I
 */
JNIEXPORT jint JNICALL Java_com_oracle_dalvik_javalauncher_JavaLauncher__1callJava
  (JNIEnv *, jobject, jstring, jstring, jstring, jobjectArray, jobject);

/*
 * Class:     com_oracle_dalvik_javalauncher_JavaLauncher
 * Method:    _destroyJavaVM
 * Signature: (Lcom/oracle/dalvik/javalauncher/JavaLauncherCallback;)I
 */
JNIEXPORT jint JNICALL Java_com_oracle_dalvik_javalauncher_JavaLauncher__1destroyJavaVM
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_oracle_dalvik_javalauncher_JavaLauncher
 * Method:    _destroyJavaVM
 * Signature: (Lcom/oracle/dalvik/javalauncher/JavaLauncherCallback;)I
 */
JNIEXPORT jint JNICALL Java_com_oracle_dalvik_javalauncher_JavaLauncher__1destroyJavaVM
  (JNIEnv *, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
